{"version":3,"sources":["constants/Colors.js","components/TabBarIcon.js","screens/HomeScreen.js","screens/LinksScreen.js","screens/NewsScreen.js","navigation/BottomTabNavigator.js","navigation/LinkingConfiguration.js","App.js","hooks/useCachedResources.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","HomeScreen","View","styles","container","contentContainerStyle","contentContainer","welcomeContainer","Text","title","TodaysEkadasi","getStartedContainer","tabBarInfoContainer","OverlayNote","useState","visible","setVisible","toggleOverlay","buttonStyle","codeHighlightContainer","titleStyle","codeHighlightText","onPress","isVisible","onBackdropPress","Date","getFullYear","month","getMonth","dayOfMonth","getDate","getDay","data","map","monthId","firstEkadasi","dayInMonth","key","fontSize","dayOfWeek","monthName","ekadasiName","secondEkadasi","thirdEkadasi","navigationOptions","header","StyleSheet","create","flex","backgroundColor","developmentModeText","lineHeight","textAlign","paddingTop","alignItems","marginTop","welcomeImage","width","height","resizeMode","marginLeft","marginHorizontal","homeScreenFilename","marginVertical","borderRadius","paddingHorizontal","getStartedText","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText","LinksScreen","OptionButton","icon","label","WebBrowser","Linking","openURL","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","optionText","marginRight","borderWidth","hairlineWidth","borderBottomWidth","borderColor","alignSelf","NewsScreen","CalendarData","leftElement","NewsScreenFilename","BottomTab","createBottomTabNavigator","BottomTabNavigator","navigation","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","tabBarIcon","state","routes","index","prefixes","config","Root","path","screens","Ekadasi","Links","All","Stack","createStackNavigator","App","React","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","font","require","console","warn","useCachedResources","OS","StatusBar","barStyle","NavigationContainer","linking","LinkingConfiguration","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","module","exports"],"mappings":"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","file":"static/js/app.fc3fe092.chunk.js","sourcesContent":["const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport React, { useState } from 'react';\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { Card, Divider, Avatar, Button, ListItem, Icon, Overlay } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { MonoText } from '../components/StyledText';\n// const data = require('../components/data/data.json');\nimport * as data from '../components/data/data.json';\n\nexport default function HomeScreen() {\n\n  return (\n\n    <View style={styles.container}>\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <View style={styles.welcomeContainer}>\n          <Text>Hare Krsna! See below for the date of the next Ekadasi. NOTE: the name of the Ekadasi is stated after the Date.</Text>\n          {/* <Image\n            source={\n              __DEV__\n                ? require('../assets/images/robot-dev.png')\n                : require('../assets/images/robot-prod.png')\n            }\n            style={styles.welcomeImage}\n          /> */}\n        </View>\n\n        <Card\n          title={<TodaysEkadasi />}\n        />\n\n\n        <View style={styles.getStartedContainer}>\n          <Text>{<TodaysEkadasi />}</Text>\n          {/* <MonthsEkadasi /> */}\n          {/* <TodaysEkadasi /> */}\n          {/* <DevelopmentModeNotice />        \n          <Text style={styles.getStartedText}>Open up the code for this screen:</Text>\n          <View style={[styles.codeHighlightContainer, styles.homeScreenFilename]}>\n            <MonoText>screens/HomeScreen.js</MonoText>\n          </View>\n          <Text style={styles.getStartedText}>\n            This is changed on machine. Change any of the text, save the file, and your app will automatically reload.\n          </Text> */}\n\n        </View>\n        {/* <View style={styles.helpContainer}>\n          <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n            <Text style={styles.helpLinkText}>Help, it didn’t automatically reload!</Text>\n          </TouchableOpacity>\n        </View> */}\n\n      </ScrollView >\n\n      <View style={styles.tabBarInfoContainer}>\n        <OverlayNote />\n        {/* <Text style={[styles.codeHighlightContainer]}>NOTE: All dates are for Vrndavana, India. For your local dates tap \"Resources\" below and tap \"Pure Bhakti Calendar.\" You can configure your local time on Pure Bhatki.</Text> */}\n        {/* <View style={[styles.codeHighlightContainer, styles.navigationFilename]}>\n          <MonoText style={styles.codeHighlightText}>navigation/BottomTabNavigator.js</MonoText>\n        </View> */}\n      </View>\n\n    </View >\n  );\n\n}\n\n\nfunction OverlayNote() {\n  const [visible, setVisible] = useState(false);\n\n  const toggleOverlay = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <View>\n      <Button buttonStyle={[styles.codeHighlightContainer]} title=\"Tap for important notice...\" titleStyle={styles.codeHighlightText} onPress={toggleOverlay} />\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay}>\n        <Text>NOTE: All dates are for Vrndavana, India. For your local dates tap \"Resources\" below and tap \"Pure Bhakti Calendar.\" You can configure your local time on Pure Bhatki.</Text>\n      </Overlay>\n    </View>\n  );\n};\n\n\n\nfunction MonthsEkadasi() {\n  const year = new Date().getFullYear();\n  //January = 0\n  const month = new Date().getMonth();\n  const dayOfMonth = new Date().getDate();\n  //Sunday is 0, Monday is 1, and so on.\n  const dayOfWeek = new Date().getDay();\n  return (\n    data.thisYear2020.map((data) => {\n      if (data.monthId == month) {\n        return (\n          <View key={data.monthId}>\n            {/* <Text>{data.monthName}</Text> */}\n            <Text>{data.firstEkadasi}</Text>\n            <Text>{data.secondEkadasi}</Text>\n            <Text>{data.thirdEkadasi}</Text>\n            <Divider style={{ backgroundColor: 'blue' }} />\n          </View>\n        )\n      }\n    })\n  )\n}\n\n\nfunction TodaysEkadasi() {\n  const year = new Date().getFullYear();\n  //January = 0\n  const month = new Date().getMonth();\n  const dayOfMonth = new Date().getDate();\n  //Sunday is 0, Monday is 1, and so on.\n  const dayOfWeek = new Date().getDay();\n\n  return (\n\n    data.thisYear2020.map((data) => {\n\n      // if day of month is greater than today's day of month\n      if (data.monthId == month && data.firstEkadasi.dayInMonth > dayOfMonth) {\n\n        return (\n          <View key={data.monthId}>\n\n\n            <Text style={{ fontSize: 25 }}>{data.firstEkadasi.dayOfWeek}, {data.monthName} {data.firstEkadasi.dayInMonth}: {data.firstEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n      // if day of month is greater than today's day of month\n      if (data.monthId == month && data.secondEkadasi.dayInMonth > dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            {/* <Text>{data.monthName}</Text> */}\n            <Text style={{ fontSize: 25 }}>{data.secondEkadasi.dayOfWeek}, {data.monthName} {data.secondEkadasi.dayInMonth}: {data.secondEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n\n      if (data.monthId == month && data.thirdEkadasi.dayInMonth > dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            {/* <Text>{data.monthName}</Text> */}\n            <Text style={{ fontSize: 25 }}>{data.thirdEkadasi.dayOfWeek}, {data.monthName} {data.thirdEkadasi.dayInMonth}: {data.thirdEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n\n    })\n\n  )\n}\n\n\n\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n\n    );\n\n    return (\n\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use useful development\n        tools. {learnMoreButton}\n      </Text>\n    );\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    );\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/workflow/development-mode/');\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/get-started/create-a-new-app/#making-your-first-change'\n  );\n}\n\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});","import { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Platform, Linking } from 'react-native';\nimport { Button, Overlay } from 'react-native-elements';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\n\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      <OptionButton\n        icon=\"md-calendar\"\n        label=\"Pure Bhakti Calendar\"\n        onPress={() => WebBrowser.openBrowserAsync('https://www.purebhakti.com/resources/vaisnava-calendar')}\n      />\n\n      <OptionButton\n        icon=\"md-school\"\n        label=\"The Loving Reality\"\n        onPress={() => WebBrowser.openBrowserAsync('https://kripa.tv/')}\n      />\n\n      <OptionButton\n        icon=\"ios-help-buoy\"\n        label=\"Contact Support\"\n        onPress={() => Linking.openURL('mailto:dominick@dominickdesigns.space?subject=Contacting Ekadasi App Support&body=Hare Krsna! I am contating you from the Ekadasi App.')}\n        isLastOption\n      />\n\n\n    </ScrollView>\n  );\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n});","import * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View, Button } from 'react-native';\nimport { Card, Divider, Avatar, ListItem, ListItemProps } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { MonoText } from '../components/StyledText';\n// import { data } from '../components/data/data.json';\n\n// const data = require('../components/data/data.json');\nimport * as data from '../components/data/data.json';\n\n\n\n\n\nexport default function NewsScreen() {\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <View style={styles.welcomeContainer}>\n          {/* <Image\n            source={\n              __DEV__\n                ? require('../assets/images/robot-dev.png')\n                : require('../assets/images/robot-prod.png')\n            }\n            style={styles.welcomeImage}\n          /> */}\n        </View>\n\n        {/* style={styles.getStartedContainer} */}\n        <View >\n\n          {/* <DevelopmentModeNotice /> */}\n          {/* <Text>This is a list of all Ekadasis in 2020-2021</Text> */}\n\n          <CalendarData />\n\n\n          {/* <Text style={styles.getStartedText}>Open up the code for this screen:</Text>\n\n          <View style={[styles.codeHighlightContainer, styles.NewsScreenFilename]}>\n            <MonoText>screens/NewsScreen.js</MonoText>\n          </View>\n\n          <Text style={styles.getStartedText}>\n            This is changed on machine. Change any of the text, save the file, and your app will automatically reload.\n          </Text> */}\n\n        </View>\n\n        {/* <View style={styles.helpContainer}>\n          <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n            <Text style={styles.helpLinkText}>Help, it didn’t automatically reload!</Text>\n          </TouchableOpacity>\n        </View> */}\n\n\n      </ScrollView>\n\n      {/* <View style={styles.tabBarInfoContainer}>\n        <Text style={styles.tabBarInfoText}>This is a tab bar. You can edit it in:</Text>\n\n        <View style={[styles.codeHighlightContainer, styles.navigationFilename]}>\n          <MonoText style={styles.codeHighlightText}>navigation/BottomTabNavigator.js</MonoText>\n        </View>\n      </View> */}\n\n    </View>\n  );\n}\n\nNewsScreen.navigationOptions = {\n  header: null,\n};\n\n\n// my code testing\nconst testOutputInReactElement = () => {\n  return (\n    <View>\n      <Text>this can be in avatar or any react element text value</Text>\n    </View>\n  )\n}\n\nfunction TodaysEkadasi() {\n  const month = new Date().getMonth();\n  return (\n    data.thisYear2020.map((data) => {\n      if (data.monthId == month) {\n        return (\n          <View key={data.monthId}>\n            <Text>{data.monthName}</Text>\n            <Text>{data.firstEkadasi}</Text>\n            <Text>{data.secondEkadasi}</Text>\n            <Text>{data.thirdEkadasi}</Text>\n          </View>\n        )\n      }\n\n    })\n  )\n}\nfunction CalendarData() {\n  let year = new Date().getFullYear();\n  let month = new Date().getMonth();\n  let dayOfMonth = new Date().getDate();\n  const today = ((year) + \" \" + (month) + \" \" + (dayOfMonth));\n\n  return (\n    data.thisYear2020.map((data) => {\n\n      return (\n        <View key={data.monthId}>\n          <Card title={data.monthName} />\n          <View>\n            <ListItem\n              key={data.monthId}\n              leftElement={() =>\n                (<View>\n                  <View>\n                    <Text>{data.firstEkadasi.dayOfWeek}, {data.monthName} {data.firstEkadasi.dayInMonth}</Text>\n                    <Divider style={{ backgroundColor: 'blue' }} />\n                    <Text>{data.secondEkadasi.dayOfWeek}, {data.monthName} {data.secondEkadasi.dayInMonth}</Text>\n                    <Divider style={{ backgroundColor: 'blue' }} />\n                    <Text>{data.thirdEkadasi.dayOfWeek} {data.thirdEkadasi.dayInMonth}</Text>\n                    <Divider style={{ backgroundColor: 'blue' }} />\n                  </View>\n                </View>\n                )}\n            />\n          </View>\n          <Divider style={{ backgroundColor: 'blue' }} />\n        </View>\n      )\n    })\n  )\n}\n\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n\n    );\n\n    return (\n\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use useful development\n        tools. {learnMoreButton}\n      </Text>\n    );\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    );\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/workflow/development-mode/');\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/get-started/create-a-new-app/#making-your-first-change'\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  NewsScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport NewsScreen from '../screens/NewsScreen';\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Ekadasi';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Ekadasi\"\n        component={HomeScreen}\n        options={{\n          title: 'Ekadasi',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-heart-empty\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Resources\"\n        component={LinksScreen}\n        options={{\n          title: 'Resources',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"All\"\n        component={NewsScreen}\n        options={{\n          title: 'All',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-calendar\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Ekadasi':\n      return 'The next Ekadasi is...';\n    case 'Resources':\n      return 'Bhakti Resources';\n    case 'All':\n      return 'Ekadasi dates in 2020';\n  }\n}","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    Root: {\n      path: 'root',\n      screens: {\n        Ekadasi: 'ekadasi',\n        Links: 'links',\n        All: 'all',\n\n      },\n    },\n  },\n};\n","import { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport LinkingConfiguration from './navigation/LinkingConfiguration';\n\nconst Stack = createStackNavigator();\n\nexport default function App(props) {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"dark-content\" />}\n        <NavigationContainer linking={LinkingConfiguration}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/dominick-designs/react-native-app-ekadasi/expo-service-worker.js', { scope: '/dominick-designs/react-native-app-ekadasi/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}