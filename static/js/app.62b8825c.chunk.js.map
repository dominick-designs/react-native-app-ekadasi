{"version":3,"sources":["assets/images/bhaktabhandav.png","constants/Colors.js","components/TabBarIcon.js","screens/HomeScreen.js","screens/LinksScreen.js","screens/NewsScreen.js","navigation/BottomTabNavigator.js","navigation/LinkingConfiguration.js","App.js","hooks/useCachedResources.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["module","exports","TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","HomeScreen","View","styles","container","contentContainerStyle","contentContainer","welcomeContainer","Image","source","require","welcomeImage","Text","containerStyle","backgroundColor","title","TodaysEkadasi","tabBarInfoContainer","OverlayNote","useState","visible","setVisible","toggleOverlay","buttonStyle","codeHighlightContainer","titleStyle","codeHighlightText","onPress","isVisible","onBackdropPress","month","Date","getMonth","dayOfMonth","getDate","data","map","monthId","firstEkadasi","dayInMonth","key","displayEkadasi","dayOfWeek","monthName","ekadasiName","secondEkadasi","thirdEkadasi","navigationOptions","header","StyleSheet","create","flex","fontSize","developmentModeText","lineHeight","textAlign","paddingTop","alignItems","marginTop","marginLeft","marginRight","width","height","resizeMode","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","borderRadius","paddingHorizontal","getStartedText","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText","LinksScreen","OptionButton","icon","label","bhaktiCalendar","kripaTv","Linking","openURL","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","optionText","WebBrowser","borderWidth","hairlineWidth","borderBottomWidth","borderColor","alignSelf","NewsScreen","CalendarData","getFullYear","leftElement","NewsScreenFilename","BottomTab","createBottomTabNavigator","BottomTabNavigator","navigation","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","tabBarIcon","state","routes","index","prefixes","config","Root","path","screens","Ekadasi","Links","All","Stack","createStackNavigator","App","React","isLoadingComplete","setLoadingComplete","a","async","SplashScreen","Font","font","console","warn","useCachedResources","OS","StatusBar","barStyle","NavigationContainer","linking","LinkingConfiguration","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.62b8825c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bhaktabhandav.78fe561a.png\";","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { Image, Platform, StyleSheet, Text, View } from 'react-native';\nimport { Card, Button, Overlay } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport * as data from '../components/data/data.json';\nimport { getCurrentFrame } from 'expo/build/AR';\n\nexport default function HomeScreen() {\n\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <View style={styles.welcomeContainer}>\n          <Image\n            source={require('../assets/images/bhaktabhandav.png')}\n            style={styles.welcomeImage}\n          />\n          <Text>Hare Krsna! See below for the date of the next Ekadasi. NOTE: the name of the Ekadasi is stated after the Date.</Text>\n        </View>\n\n        <Card\n          containerStyle={{ backgroundColor: 'rgb(248, 211, 110)' }}\n          title={<TodaysEkadasi />}\n        />\n\n      </ScrollView >\n\n      <View style={styles.tabBarInfoContainer}>\n        <OverlayNote />\n      </View>\n    </View >\n  );\n}\n\nfunction OverlayNote() {\n  const [visible, setVisible] = useState(false);\n\n  const toggleOverlay = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <View>\n\n      <Button buttonStyle={[styles.codeHighlightContainer]} title=\"Tap for important notice...\" titleStyle={styles.codeHighlightText} onPress={toggleOverlay} />\n\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay}>\n        <Text>NOTE: All dates are for Vrndavana, India. For your local dates tap \"Resources\" below and tap \"Pure Bhakti Calendar.\" You can configure your local time on Pure Bhatki.</Text>\n      </Overlay>\n\n    </View>\n  );\n};\n\nfunction TodaysEkadasi() {\n  const month = new Date().getMonth();\n  const dayOfMonth = new Date().getDate();\n  return (\n\n    data.thisYear2020.map((data) => {\n      if (data.monthId == month && data.firstEkadasi.dayInMonth > dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>{data.firstEkadasi.dayOfWeek}, {data.monthName} {data.firstEkadasi.dayInMonth}:{data.firstEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n      if (data.monthId == month && data.secondEkadasi.dayInMonth > dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>{data.secondEkadasi.dayOfWeek}, {data.monthName} {data.secondEkadasi.dayInMonth}: {data.secondEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n\n      if (data.monthId == month && data.thirdEkadasi.dayInMonth > dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>{data.thirdEkadasi.dayOfWeek}, {data.monthName} {data.thirdEkadasi.dayInMonth}: {data.thirdEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n\n\n\n\n      if (data.monthId == month && data.firstEkadasi.dayInMonth == dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>{data.firstEkadasi.dayOfWeek}, {data.monthName} {data.firstEkadasi.dayInMonth}:{data.firstEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n      if (data.monthId == month && data.secondEkadasi.dayInMonth == dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>Today is Ekadasi! {data.secondEkadasi.dayOfWeek}, {data.monthName} {data.secondEkadasi.dayInMonth}: {data.secondEkadasi.ekadasiName} </Text>\n          </View>\n        )\n      }\n\n      if (data.monthId == month && data.thirdEkadasi.dayInMonth == dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>{data.thirdEkadasi.dayOfWeek}, {data.monthName} {data.thirdEkadasi.dayInMonth}: {data.thirdEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n\n\n\n    })\n\n  )\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  displayEkadasi: {\n    fontSize: 25,\n\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n    marginLeft: 20,\n    marginRight: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginBottom: 30\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});","import { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Platform, Linking } from 'react-native';\nimport { Button, Overlay } from 'react-native-elements';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\n\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      <OptionButton\n        icon=\"md-calendar\"\n        label=\"Pure Bhakti Calendar\"\n        onPress={bhaktiCalendar}\n      />\n\n      <OptionButton\n        icon=\"md-school\"\n        label=\"The Loving Reality\"\n        onPress={kripaTv}\n      />\n\n      <OptionButton\n        icon=\"ios-help-buoy\"\n        label=\"Contact Support\"\n        onPress={() => Linking.openURL('mailto:dominick@dominickdesigns.space?subject=Contacting Ekadasi App Support&body=Hare Krsna! I am contating you from the Ekadasi App.')}\n        isLastOption\n      />\n\n\n    </ScrollView>\n  );\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\n\nfunction bhaktiCalendar() {\n  WebBrowser.openBrowserAsync('https://www.purebhakti.com/resources/vaisnava-calendar');\n}\n\nfunction kripaTv() {\n  WebBrowser.openBrowserAsync('https://kripa.tv/');\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n});","import * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet, Text, View, Button } from 'react-native';\nimport { Card, Divider, ListItem } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport * as data from '../components/data/data.json';\n\nexport default function NewsScreen() {\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <View style={styles.welcomeContainer}>\n          <Image\n            source={require('../assets/images/bhaktabhandav.png')}\n            style={styles.welcomeImage}\n          />\n        </View>\n\n        <View >\n          <CalendarData />\n        </View>\n\n      </ScrollView>\n\n    </View>\n  );\n}\n\nNewsScreen.navigationOptions = {\n  header: null,\n};\n\n\nfunction TodaysEkadasi() {\n  const month = new Date().getMonth();\n  return (\n    data.thisYear2020.map((data) => {\n      if (data.monthId == month) {\n        return (\n          <View key={data.monthId}>\n            <Text>{data.monthName}</Text>\n            <Text>{data.firstEkadasi}</Text>\n            <Text>{data.secondEkadasi}</Text>\n            <Text>{data.thirdEkadasi}</Text>\n          </View>\n        )\n      }\n\n    })\n  )\n}\nfunction CalendarData() {\n  let year = new Date().getFullYear();\n  let month = new Date().getMonth();\n  let dayOfMonth = new Date().getDate();\n  const today = ((year) + \" \" + (month) + \" \" + (dayOfMonth));\n\n  return (\n    data.thisYear2020.map((data) => {\n\n      return (\n        <View key={data.monthId}>\n          <Card title={data.monthName} />\n          <View>\n            <ListItem\n              key={data.monthId}\n              leftElement={() =>\n                (<View>\n                  <View>\n                    <Text>{data.firstEkadasi.dayOfWeek}, {data.monthName} {data.firstEkadasi.dayInMonth}</Text>\n                    <Divider style={{ backgroundColor: 'blue' }} />\n                    <Text>{data.secondEkadasi.dayOfWeek}, {data.monthName} {data.secondEkadasi.dayInMonth}</Text>\n                    <Divider style={{ backgroundColor: 'blue' }} />\n                    <Text>{data.thirdEkadasi.dayOfWeek} {data.thirdEkadasi.dayInMonth}</Text>\n                    <Divider style={{ backgroundColor: 'blue' }} />\n                  </View>\n                </View>\n                )}\n            />\n          </View>\n          <Divider style={{ backgroundColor: 'blue' }} />\n        </View>\n      )\n    })\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  NewsScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport NewsScreen from '../screens/NewsScreen';\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Ekadasi';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Ekadasi\"\n        component={HomeScreen}\n        options={{\n          title: 'Ekadasi',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-heart-empty\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Resources\"\n        component={LinksScreen}\n        options={{\n          title: 'Resources',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"All\"\n        component={NewsScreen}\n        options={{\n          title: 'All',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-calendar\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Ekadasi':\n      return 'The next Ekadasi is...';\n    case 'Resources':\n      return 'Bhakti Resources';\n    case 'All':\n      return 'Ekadasi dates in 2020';\n  }\n}","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    Root: {\n      path: 'root',\n      screens: {\n        Ekadasi: 'ekadasi',\n        Links: 'links',\n        All: 'all',\n\n      },\n    },\n  },\n};\n","import { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport LinkingConfiguration from './navigation/LinkingConfiguration';\n\nconst Stack = createStackNavigator();\n\nexport default function App(props) {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"dark-content\" />}\n        <NavigationContainer linking={LinkingConfiguration}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/react-native-app-ekadasi/expo-service-worker.js', { scope: '/react-native-app-ekadasi/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}