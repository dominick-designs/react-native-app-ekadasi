{"version":3,"sources":["assets/images/bhaktabhandav.png","constants/Colors.js","components/TabBarIcon.js","screens/HomeScreen.js","screens/LinksScreen.js","screens/NewsScreen.js","navigation/BottomTabNavigator.js","navigation/LinkingConfiguration.js","App.js","hooks/useCachedResources.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["module","exports","TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","HomeScreen","state","expoPushToken","notification","registerForPushNotificationsAsync","a","async","Constants","isDevice","Permissions","existingStatus","status","finalStatus","alert","Notifications","getExpoPushTokenAsync","token","console","log","setState","Platform","OS","createChannelAndroidAsync","sound","priority","vibrate","_handleNotification","Vibration","sendPushNotification","message","to","title","body","data","_displayInForeground","fetch","method","headers","Accept","JSON","stringify","this","_notificationSubscription","addListener","View","styles","container","contentContainerStyle","contentContainer","flex","alignItems","justifyContent","Text","origin","onPress","welcomeContainer","Image","source","require","welcomeImage","containerStyle","backgroundColor","TodaysEkadasi","tabBarInfoContainer","OverlayNote","Component","useState","visible","setVisible","toggleOverlay","buttonStyle","codeHighlightContainer","titleStyle","codeHighlightText","isVisible","onBackdropPress","month","Date","getMonth","dayOfMonth","getDate","findNextMonth","find","element","monthId","map","firstEkadasi","dayInMonth","key","displayEkadasi","dayOfWeek","monthName","ekadasiName","secondEkadasi","thirdEkadasi","undefined","navigationOptions","header","StyleSheet","create","fontSize","developmentModeText","lineHeight","textAlign","paddingTop","marginTop","marginLeft","marginRight","width","height","resizeMode","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","borderRadius","paddingHorizontal","getStartedText","position","bottom","left","right","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText","LinksScreen","OptionButton","icon","label","bhaktiCalendar","kripaTv","Linking","openURL","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","optionText","WebBrowser","borderWidth","hairlineWidth","borderBottomWidth","borderColor","alignSelf","NewsScreen","CalendarData","getFullYear","leftElement","NewsScreenFilename","BottomTab","createBottomTabNavigator","BottomTabNavigator","navigation","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","tabBarIcon","routes","index","prefixes","config","Root","path","screens","Ekadasi","Links","All","Stack","createStackNavigator","App","React","isLoadingComplete","setLoadingComplete","SplashScreen","Font","font","warn","useCachedResources","StatusBar","barStyle","NavigationContainer","linking","LinkingConfiguration","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.39517df1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bhaktabhandav.78fe561a.png\";","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import { Ionicons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import React, { useState, useEffect, Component } from 'react';\nimport { Image, Platform, StyleSheet, Text, View, Vibration } from 'react-native';\nimport { Card, Button, Overlay } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport * as data from '../components/data/data.json';\nimport { list2020 } from '../components/data/list.js';\nimport { getCurrentFrame } from 'expo/build/AR';\nimport { render } from 'react-dom';\n\n\n\n\n\n\n\n\n\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nimport Constants from 'expo-constants';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default class HomeScreen extends Component {\n\n\n\n\n\n\n\n\n\n  state = {\n    expoPushToken: '',\n    notification: {},\n  };\n\n  registerForPushNotificationsAsync = async () => {\n    if (Constants.isDevice) {\n      const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\n      let finalStatus = existingStatus;\n      if (existingStatus !== 'granted') {\n        const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n        finalStatus = status;\n      }\n      if (finalStatus !== 'granted') {\n        alert('Failed to get push token for push notification!');\n        return;\n      }\n      token = await Notifications.getExpoPushTokenAsync();\n      console.log(token);\n      this.setState({ expoPushToken: token });\n    } else {\n      alert('Must use physical device for Push Notifications');\n    }\n\n    if (Platform.OS === 'android') {\n      Notifications.createChannelAndroidAsync('default', {\n        name: 'default',\n        sound: true,\n        priority: 'max',\n        vibrate: [0, 250, 250, 250],\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.registerForPushNotificationsAsync();\n\n    // Handle notifications that are received or selected while the app\n    // is open. If the app was closed and then opened by tapping the\n    // notification (rather than just tapping the app icon to open it),\n    // this function will fire on the next tick after the app starts\n    // with the notification data.\n    this._notificationSubscription = Notifications.addListener(this._handleNotification);\n  }\n\n  _handleNotification = notification => {\n    Vibration.vibrate();\n    console.log(notification);\n    this.setState({ notification: notification });\n  };\n\n  // Can use this function below, OR use Expo's Push Notification Tool-> https://expo.io/dashboard/notifications\n\n\n  sendPushNotification = async () => {\n    const message = {\n      to: this.state.expoPushToken,\n      sound: 'default',\n      title: 'Original Title',\n      body: 'And here is the body!',\n      data: { data: 'goes here' },\n      _displayInForeground: true,\n    };\n    const response = await fetch('https://exp.host/--/api/v2/push/send', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Accept-encoding': 'gzip, deflate',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(message),\n    });\n  };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  render() {\n    return (\n      <View style={styles.container}>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n\n\n\n\n\n\n\n\n          <View\n            style={{\n              flex: 1,\n              alignItems: 'center',\n              justifyContent: 'space-around',\n            }}>\n            <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n              <Text>Origin: {this.state.notification.origin}</Text>\n              <Text>Data: {JSON.stringify(this.state.notification.data)}</Text>\n            </View>\n            <Button title={'Press to Send Notification'} onPress={() => this.sendPushNotification()} />\n          </View>\n\n\n\n\n\n\n\n\n\n          <View style={styles.welcomeContainer}>\n            <Image\n              source={require('../assets/images/bhaktabhandav.png')}\n              style={styles.welcomeImage}\n            />\n            <Text>Hare Krsna! See below for the date of the next Ekadasi. NOTE: the name of the Ekadasi is stated after the Date.</Text>\n          </View>\n\n\n          <Card\n            containerStyle={{ backgroundColor: 'rgb(248, 211, 110)' }}\n            title={<TodaysEkadasi />}\n          />\n\n\n\n\n        </ScrollView >\n\n        <View style={styles.tabBarInfoContainer}>\n          <OverlayNote />\n        </View>\n      </View >\n    );\n  }\n}\n\n\nfunction OverlayNote() {\n  const [visible, setVisible] = useState(false);\n\n  const toggleOverlay = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <View>\n\n      <Button buttonStyle={[styles.codeHighlightContainer]} title=\"Tap for important notice...\" titleStyle={styles.codeHighlightText} onPress={toggleOverlay} />\n\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay}>\n        <Text>NOTE: All dates are for Vrndavana, India. For your local dates tap \"Resources\" below and tap \"Pure Bhakti Calendar.\" You can configure your local time on Pure Bhatki.</Text>\n      </Overlay>\n\n    </View>\n  );\n};\n\n\n\n\nfunction TodaysEkadasi() {\n\n\n  const month = new Date().getMonth();\n  const dayOfMonth = new Date().getDate();\n  const findNextMonth = data.thisYear2020.find((element) => {\n    return element.monthId == month + 1\n  })\n\n  return (\n    data.thisYear2020.map((data) => {\n\n      if (data.monthId == month && data.firstEkadasi.dayInMonth >= dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>{data.firstEkadasi.dayOfWeek}, {data.monthName} {data.firstEkadasi.dayInMonth}:{data.firstEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n\n      if (data.monthId == month && data.secondEkadasi.dayInMonth >= dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>{data.secondEkadasi.dayOfWeek}, {data.monthName} {data.secondEkadasi.dayInMonth}: {data.secondEkadasi.ekadasiName}</Text>\n          </View>\n        )\n      }\n\n      if (data.monthId == month && data.thirdEkadasi.dayInMonth >= dayOfMonth) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>\n\n              {data.thirdEkadasi.dayOfWeek}, {data.monthName} {data.thirdEkadasi.dayInMonth}: {data.thirdEkadasi.ekadasiName}\n\n            </Text>\n          </View>\n        )\n      }\n\n      if ((data.monthId == month) && (data.thirdEkadasi.dayInMonth == undefined)) {\n        return (\n          <View key={data.monthId}>\n            <Text style={styles.displayEkadasi}>\n              {findNextMonth.firstEkadasi.dayOfWeek}, {findNextMonth.monthName} {findNextMonth.firstEkadasi.dayInMonth}: {findNextMonth.firstEkadasi.ekadasiName}\n\n\n\n            </Text>\n          </View>\n\n        )\n      }\n\n    })\n  )\n}\n\n\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  displayEkadasi: {\n    fontSize: 25,\n\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n    marginLeft: 20,\n    marginRight: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginBottom: 30\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n\n\n\n","import { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Platform, Linking } from 'react-native';\nimport { Button, Overlay } from 'react-native-elements';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\n\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      <OptionButton\n        icon=\"md-calendar\"\n        label=\"Pure Bhakti Calendar\"\n        onPress={bhaktiCalendar}\n      />\n\n      <OptionButton\n        icon=\"md-school\"\n        label=\"The Loving Reality\"\n        onPress={kripaTv}\n      />\n\n      <OptionButton\n        icon=\"ios-help-buoy\"\n        label=\"Contact Support\"\n        onPress={() => Linking.openURL('mailto:dominick@dominickdesigns.space?subject=Contacting Ekadasi App Support&body=Hare Krsna! I am contating you from the Ekadasi App.')}\n        isLastOption\n      />\n\n\n    </ScrollView>\n  );\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\n\nfunction bhaktiCalendar() {\n  WebBrowser.openBrowserAsync('https://www.purebhakti.com/resources/vaisnava-calendar');\n}\n\nfunction kripaTv() {\n  WebBrowser.openBrowserAsync('https://kripa.tv/');\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n});","import * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet, Text, View, Button } from 'react-native';\nimport { Card, Divider, ListItem } from 'react-native-elements';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport * as data from '../components/data/data.json';\n\nexport default function NewsScreen() {\n  return (\n    <View style={styles.container}>\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <View style={styles.welcomeContainer}>\n          <Image\n            source={require('../assets/images/bhaktabhandav.png')}\n            style={styles.welcomeImage}\n          />\n        </View>\n\n        <View >\n          <CalendarData />\n        </View>\n\n      </ScrollView>\n\n    </View>\n  );\n}\n\nNewsScreen.navigationOptions = {\n  header: null,\n};\n\n\nfunction TodaysEkadasi() {\n  const month = new Date().getMonth();\n  return (\n    data.thisYear2020.map((data) => {\n      if (data.monthId == month) {\n        return (\n          <View key={data.monthId}>\n            <Text>{data.monthName}</Text>\n            <Text>{data.firstEkadasi}</Text>\n            <Text>{data.secondEkadasi}</Text>\n            <Text>{data.thirdEkadasi}</Text>\n          </View>\n        )\n      }\n\n    })\n  )\n}\nfunction CalendarData() {\n  let year = new Date().getFullYear();\n  let month = new Date().getMonth();\n  let dayOfMonth = new Date().getDate();\n  const today = ((year) + \" \" + (month) + \" \" + (dayOfMonth));\n\n  return (\n    data.thisYear2020.map((data) => {\n\n      return (\n        <View key={data.monthId}>\n          <Card title={data.monthName} />\n          <View>\n            <ListItem\n              key={data.monthId}\n              leftElement={() =>\n                (<View>\n                  <View>\n                    <Text>{data.firstEkadasi.dayOfWeek}, {data.monthName} {data.firstEkadasi.dayInMonth}</Text>\n                    <Divider style={{ backgroundColor: 'blue' }} />\n                    <Text>{data.secondEkadasi.dayOfWeek}, {data.monthName} {data.secondEkadasi.dayInMonth}</Text>\n                    <Divider style={{ backgroundColor: 'blue' }} />\n                    <Text>{data.thirdEkadasi.dayOfWeek} {data.thirdEkadasi.dayInMonth}</Text>\n                    <Divider style={{ backgroundColor: 'blue' }} />\n                  </View>\n                </View>\n                )}\n            />\n          </View>\n          <Divider style={{ backgroundColor: 'blue' }} />\n        </View>\n      )\n    })\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  NewsScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport NewsScreen from '../screens/NewsScreen';\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Ekadasi';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Ekadasi\"\n        component={HomeScreen}\n        options={{\n          title: 'Ekadasi',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-heart-empty\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Resources\"\n        component={LinksScreen}\n        options={{\n          title: 'Resources',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"All\"\n        component={NewsScreen}\n        options={{\n          title: 'All',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-calendar\" />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Ekadasi':\n      return 'The next Ekadasi is...';\n    case 'Resources':\n      return 'Bhakti Resources';\n    case 'All':\n      return 'Ekadasi dates in 2020';\n  }\n}","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    Root: {\n      path: 'root',\n      screens: {\n        Ekadasi: 'ekadasi',\n        Links: 'links',\n        All: 'all',\n\n      },\n    },\n  },\n};\n","import { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport LinkingConfiguration from './navigation/LinkingConfiguration';\n\nconst Stack = createStackNavigator();\n\n\n\n\nexport default function App(props) {\n  const isLoadingComplete = useCachedResources();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"dark-content\" />}\n        <NavigationContainer linking={LinkingConfiguration}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","import { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as React from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/react-native-app-ekadasi/expo-service-worker.js', { scope: '/react-native-app-ekadasi/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}